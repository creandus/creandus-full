# Copyright 2006, 2008 Mike Kelly
# Distributed under the terms of the GNU General Public License v2
#
# read_userdata.sh - Read the proper data file for the desired user
# $Id$

# In the full implementation, should go through all the cascading
# profiles in proper order, but for now we're just parsing these 2
# config files

# TODO: Split this file up in such a way as to be automatically done
# correctly for various distros.

. "${CREANDUS_SCRIPTDIR}/common/get_profiledirs.bash" || exit 1
. "${CREANDUS_SCRIPTDIR}/common/load_config.bash" || exit 1

# read_userdata()
# Inputs:
#  $1 - name of user to be added
# Outputs:
#  $userid - a range specification of valid user ids for the given user name
#  $usershell - the user's default shell
#  $userhome - the users's home directory
#  $usergroups - a comma-separated list of groups the user belongs to
#  $usercomment - the GECOS comment field for the user
read_userdata() {
	local userfile="" profile_dirs="" d d_

	if [[ -n "${PALUDIS_PROFILE_DIRS}" ]] ; then
		profile_dirs="${PALUDIS_PROFILE_DIRS}"
	elif [[ -e "/etc/make.profile" ]] ; then
		profile_dirs="/etc/make.profile"
	else
		die "Could not determine the profile directory."
	fi
	
	local all_profile_dirs="$(get_profiledirs "${profile_dirs}")"

	for d in "user/${1}" "defaults" ; do
		for d_ in ${CREANDUS_CONFDIR} ${all_profile_dirs} ; do
			[[ -f "${d_}/accounts/${d}" ]] \
				&& userfile="${userfile} ${d_}/accounts/${d}"
		done
	done


	local userid usershell userhome usergroups usercomment

	for x in ${userfile}; do
		userid=${userid:-$(load_config "${x}" "uid")}
		usershell=${usershell:-$(load_config "${x}" "shell")}
		userhome=${userhome:-$(load_config "${x}" "home")}
		usergroups=${usergroups:-$(load_config "${x}" "groups")}
		usercomment=${usercomment:-$(load_config "${x}" "comment")}
	done

	[[ -z "${userid}" ]] && die "Couldn't determine a uid range"
	echo "local userid=\"${userid}\""
	echo "local usershell=\"${usershell}\""
	echo "local userhome=\"${userhome}\""
	echo "local usergroups=\"${usergroups}\""
	echo "local usercomment=\"${usercomment}\""
}
# vim: ts=4 :
