diff -ur shadow-4.0.16-orig/src/useradd.c shadow-4.0.16/src/useradd.c
--- shadow-4.0.16-orig/src/useradd.c	2006-05-30 14:28:45.000000000 -0400
+++ shadow-4.0.16/src/useradd.c	2006-07-03 17:36:43.000000000 -0400
@@ -632,6 +632,7 @@
 			   "				(non-unique) UID\n"
 			   "  -p, --password PASSWORD	use encrypted password for the new user\n"
 			   "				account\n"
+			   "  -R, --root ROOT		Look for files under ROOT/etc instead of /etc\n"
 			   "  -s, --shell SHELL		the login shell for the new user account\n"
 			   "  -u, --uid UID			force use the UID for the new user account\n"));
 	exit (E_USAGE);
@@ -989,7 +990,7 @@
 {
 	const struct group *grp;
 	int anyflag = 0;
-	char *cp;
+	char *cp, *filename;
 
 	{
 		/*
@@ -1011,12 +1012,13 @@
 			{"create-home", no_argument, NULL, 'm'},
 			{"non-unique", no_argument, NULL, 'o'},
 			{"password", required_argument, NULL, 'p'},
+			{"root", required_argument, NULL, 'R'},
 			{"shell", required_argument, NULL, 's'},
 			{"uid", required_argument, NULL, 'u'},
 			{NULL, 0, NULL, '\0'}
 		};
 		while ((c =
-			getopt_long (argc, argv, "b:c:d:De:f:g:G:k:K:mMop:s:u:",
+			getopt_long (argc, argv, "b:c:d:De:f:g:G:k:K:mMop:R:s:u:",
 				     long_options, NULL)) != -1) {
 			switch (c) {
 			case 'b':
@@ -1169,6 +1171,19 @@
 				}
 				user_pass = optarg;
 				break;
+			case 'R':	/* set new root */
+				filename = malloc (sizeof(char) * 1024);
+				snprintf (filename, 1024, "%s%s", optarg, PASSWD_FILE);
+				pw_name (filename);
+				snprintf (filename, 1024, "%s%s", optarg, GROUP_FILE);
+				gr_name (filename);
+				snprintf (filename, 1024, "%s%s", optarg, SHADOW_FILE);
+				spw_name (filename);
+				#ifdef SHADOWGRP
+				snprintf (filename, 1024, "%s%s", optarg, SGROUP_FILE);
+				sgr_name (filename);
+				#endif
+				free (filename);
 			case 's':
 				if (!VALID (optarg)
 				    || (optarg[0]
diff -ur shadow-4.0.16-orig/src/usermod.c shadow-4.0.16/src/usermod.c
--- shadow-4.0.16-orig/src/usermod.c	2006-05-07 13:44:39.000000000 -0400
+++ shadow-4.0.16/src/usermod.c	2006-07-03 17:36:39.000000000 -0400
@@ -291,6 +291,7 @@
 			   "				location (use only with -d)\n"
 			   "  -o, --non-unique		allow using duplicate (non-unique) UID\n"
 			   "  -p, --password PASSWORD	use encrypted password for the new password\n"
+			   "  -R, --root ROOT		Look for files under ROOT/etc instead of /etc\n"
 			   "  -s, --shell SHELL		new login shell for the user account\n"
 			   "  -u, --uid UID			new UID for the user account\n"
 			   "  -U, --unlock			unlock the user account\n"));
@@ -842,6 +843,7 @@
 
 	const struct spwd *spwd = NULL;
 	int anyflag = 0;
+	char *filename;
 
 	if (argc == 1 || argv[argc - 1][0] == '-')
 		usage ();
@@ -915,13 +917,14 @@
 			{"move-home", no_argument, NULL, 'm'},
 			{"non-unique", no_argument, NULL, 'o'},
 			{"password", required_argument, NULL, 'p'},
+			{"root", required_argument, NULL, 'R'},
 			{"shell", required_argument, NULL, 's'},
 			{"uid", required_argument, NULL, 'u'},
 			{"unlock", no_argument, NULL, 'U'},
 			{NULL, 0, NULL, '\0'}
 		};
 		while ((c =
-			getopt_long (argc, argv, "ac:d:e:f:g:G:l:Lmop:s:u:U",
+			getopt_long (argc, argv, "ac:d:e:f:g:G:l:Lmop:R:s:u:U",
 				     long_options, NULL)) != -1) {
 			switch (c) {
 			case 'a':
@@ -1046,6 +1049,19 @@
 				user_pass = optarg;
 				pflg++;
 				break;
+			case 'R':	/* set new root */
+				filename = malloc (sizeof(char) * 1024);
+				snprintf (filename, 1024, "%s%s", optarg, PASSWD_FILE);
+				pw_name (filename);
+				snprintf (filename, 1024, "%s%s", optarg, GROUP_FILE);
+				gr_name (filename);
+				snprintf (filename, 1024, "%s%s", optarg, SHADOW_FILE);
+				spw_name (filename);
+				#ifdef SHADOWGRP
+				snprintf (filename, 1024, "%s%s", optarg, SGROUP_FILE);
+				sgr_name (filename);
+				#endif
+				free (filename);
 			case 's':
 				if (!VALID (optarg)) {
 					fprintf (stderr,
