# Copyright 2006 Mike Kelly
# Distributed under the terms of the GNU General Public License v2
#
# read_userdata.sh - Read the proper data file for the desired user
# $Id$

# In the full implementation, should go through all the cascading
# profiles in proper order, but for now we're just parsing these 2
# config files

# TODO: Split this file up in such a way as to be automatically done
# correctly for various distros.

. "${SCRIPTDIR}/common/get_profiledirs.bash" || exit 1

# read_userdata()
# Inputs:
#  $1 - name of user to be added
# Outputs:
#  $userid - a range specification of valid user ids for the given user name
#  $usershell - the user's default shell
#  $userhome - the users's home directory
#  $usergroups - a comma-separated list of groups the user belongs to
#  $usercomment - the GECOS comment field for the user
read_userdata() {
	local userfile="" profile_dirs="" d d_

	if [[ -n "${PALUDIS_PROFILE_DIRS}" ]] ; then
		profile_dirs="${PALUDIS_PROFILE_DIRS}"
	elif [[ -e "/etc/make.profile" ]] ; then
		profile_dirs="/etc/make.profile"
	else
		die "Could not determine the profile directory."
	fi
	
	local all_profile_dirs="$(get_profiledirs "${profile_dirs}")"

	for d in "user/${1}" "defaults" ; do
		for d_ in ${all_profile_dirs} ; do
			[[ -f "${d_}/accounts/${d}" ]] \
				&& userfile="${groupfile} ${d_}/accounts/${d}"
		done
	done


	local userid userid_ usershell usershell_ userhome userhome_
	local usergroups usergroups_ usercomment usercomment_

	for x in ${userfile}; do
		userid_=$(grep ^uid: ${x} |cut -d: -f2)
		userid_=`echo ${userid_} |sed 's,^[[:space:]]*,,'` 
		userid=${userid:-${userid_}}

		usershell_=$(grep ^shell: "${x}" |cut -d: -f2)
		usershell_=`echo ${usershell_} |sed 's,^[[:space:]]*,,'`
		usershell=${usershell:-${usershell_}}

		userhome_=$(grep ^home: "${x}" |cut -d: -f2)
		userhome_=`echo ${userhome_} |sed 's,^[[:space:]]*,,'`
		userhome=${userhome:-${userhome_}}

		usergroups_=$(grep ^groups: "${x}" |cut -d: -f2)
		usergroups_=`echo ${usergroups_} |sed 's,^[[:space:]]*,,'`
		usergroups=${usergroups:-${usergroups_}}

		usercomment_=$(grep ^comment: "${x}" |cut -d: -f2)
		usercomment_=`echo ${usercomment_} |sed 's,^[[:space:]]*,,'`
		usercomment=${usercomment:-${usercomment_}}
	done

	[[ -z "${userid}" ]] && die "Couldn't determine a uid range"
	echo "local userid=\"${userid}\""
	[[ -z "${usershell}" ]] && die "Couldn't determine a shell"
	echo "local usershell=\"${usershell}\""
	[[ -z "${userhome}" ]] && die "Couldn't determine a home dir"
	echo "local userhome=\"${userhome}\""
	[[ -z "${usergroups}" ]] && die "Couldn't determine any user groups"
	echo "local usergroups=\"${usergroups}\""
	[[ -z "${usercomment}" ]] && die "Couldn't determine a GECOS comment"
	echo "local usercomment=\"${usercomment}\""
}
# vim: ts=4 :
